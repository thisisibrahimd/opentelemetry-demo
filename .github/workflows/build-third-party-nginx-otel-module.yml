name: build-third-party-nginx-otel-module
run-name: ${{ github.actor }} is triggering pipeline
on:
  workflow_dispatch:
  pull_request:
env:
  NGINX_VERSION: release-1.24.0
  GRPC_CPP_SHA: a3f10052090539cd3e19aa8e04f3bf8eceae2964
  GRPC_CPP_VERSION: v1.52.0
  OTEL_CPP_SHA: d56a5c702fc2154ef82400df4801cd511ffb63ea
  OTEL_CPP_VERSION: v1.8.2

jobs:
  build-module:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout grpc/grpc repository
        uses: actions/checkout@v3
        with:
          repository: grpc/grpc
          ref: 'v1.49.2'
          path: grpc
          submodules: "recursive"
      - name: Checkout open-telemetry-opentelemetry-cpp repository
        uses: actions/checkout@v3
        with:
          repository: open-telemetry/opentelemetry-cpp
          ref: 'v1.8.1'
          path: opentelemetry-cpp
          submodules: "recursive"
      - name: Checkout open-telemetry/opentelemetry-cpp-contrib  repository
        uses: actions/checkout@v3
        with:
          repository: open-telemetry/opentelemetry-cpp-contrib
          path: opentelemetry-cpp-contrib
      - name: Create install directory
        run: mkdir install
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ca-certificates \
            cmake \
            curl \
            git \
            gnupg1 \
            libc-ares-dev \
            libcurl4-openssl-dev \
            libpcre3-dev \
            libre2-dev \
            libssl-dev \
            libsystemd-dev \
            pkg-config \
            zlib1g-dev \
            autoconf \
            libtool \
            pkg-config \
            gcc \
            g++ \
            gnupg2 \
            lsb-release \
            apt-transport-https \
            software-properties-common
      - name: Build grpc module
        working-directory: grpc
        run: |
          mkdir -p cmake/build \
          && cd cmake/build \
          && cmake \
            -DgRPC_INSTALL=ON \
            -DgRPC_BUILD_TESTS=OFF \
            -DCMAKE_INSTALL_PREFIX=${PWD}/../../../install \
            -DCMAKE_BUILD_TYPE=Release \
            -DgRPC_BUILD_GRPC_NODE_PLUGIN=OFF \
            -DgRPC_BUILD_GRPC_OBJECTIVE_C_PLUGIN=OFF \
            -DgRPC_BUILD_GRPC_PHP_PLUGIN=OFF \
            -DgRPC_BUILD_GRPC_PHP_PLUGIN=OFF \
            -DgRPC_BUILD_GRPC_PYTHON_PLUGIN=OFF \
            -DgRPC_BUILD_GRPC_RUBY_PLUGIN=OFF \
            -DCMAKE_CXX_STANDARD=17 \
            ../.. \
          && make -j 2 \
          && make install
      - name: Build open-telemetry module
        working-directory: opentelemetry-cpp
        run: |
          mkdir build \
          && cd build \
          && cmake -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${PWD}/../../install \
            -DCMAKE_PREFIX_PATH=${PWD}/../../install \
            -DWITH_OTLP=ON \
            -DWITH_OTLP_GRPC=ON \
            -DWITH_OTLP_HTTP=OFF \
            -DBUILD_TESTING=OFF \
            -DWITH_EXAMPLES=OFF \
            -DCMAKE_CXX_STANDARD=17 \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            .. \
          && make -j2 \
          && make install
      - name: Build module
        working-directory: opentelemetry-cpp-contrib/instrumentation/nginx
        run: |
          mkdir build modules \
          && cd build \
          && cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH=${PWD}/../../../../install \
            -DCMAKE_INSTALL_PREFIX=${PWD}/../modules \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DWITH_OTLP=ON \
            -DNGINX_VERSION=1.24.0 \
            -DNGINX_CONFIGURE_ARGS="--with-compat" \
            .. \
          && make -j4 \
          && make install
          strip otel_ngx_module.so
      - name: Archive module
        uses: actions/upload-artifact@v3
        with:
          name: nginx-otel-module
          path: opentelemetry-cpp-contrib/instrumentation/nginx/modules/otel_ngx_module.so
#      - name: Archive protoc and opentelemetry-proto
#        uses: actions/upload-artifact@v3
#        with:
#          name: protoc-opentelemetry-proto
#          path: |
#            nginx-otel/build/_deps/grpc-build/third_party/protobuf/protoc
#            nginx-otel/build/_deps/otelcpp-src/third_party/opentelemetry-proto